AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  weight-management
  Sample SAM Template for weight-management

Parameters:
  AdminMailAddress:
    Type: String
  MembersTableName:
    Type: String
  CSVBucketName:
    Type: String
  HostingBucketName:
    Type: String
  CalculateCsvBucketName:
    Type: String
Globals:
  Function:
    Timeout: 5
    Environment:
      Variables:
        ADMIN_MAIL_ADDRESS: !Ref AdminMailAddress
        MEMBER_TABLE: !Ref MembersTableName
        QUEUE_URL: !Ref SendQueue
        REGION: 'ap-northeast-1'
        HOSTING_BUCKET: !Ref HostingBucketName
        CALCULATE_BUCKET: !Ref CalculateCsvBucketName

Resources:
  CSVUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref CSVBucketName

  SendQueue: 
    Type: AWS::SQS::Queue

  MemberTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref MembersTableName
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3

  HostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref HostingBucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: S3MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref HostingBucket
                - /*
      Bucket: !Ref HostingBucket

  CalculateCsvBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref CalculateCsvBucketName

  ReadCsvFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: read-csv/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MembersTableName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt SendQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref CSVBucketName
      Events:
        BodyUploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref CSVUploadBucket
            Events: s3:ObjectCreated:*

  SendMailFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: send-mail/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MembersTableName
        - SESCrudPolicy:
            IdentityName: !Ref AdminMailAddress
      Events:
        SQSReceiveEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SendQueue.Arn
            BatchSize: 10

  SaveDataAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: stg
      Cors:
        AllowMethods: "'POST,OPTIONS'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"

  SaveDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: save-data/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MembersTableName
      Events:
        PostWeight:
          Type: Api
          Properties:
            Path: /weight
            Method: POST
            RestApiId: !Ref SaveDataAPI
  WriteCsvFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: write-csv/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MembersTableName
        - S3WritePolicy:
            BucketName: !Ref CalculateCsvBucketName
      Events:
        SeduleCalculate:
          Type: Schedule
          Properties:
            Schedule: cron(0 15 L * ? *) # 毎月末00:00に実行
Outputs:
  ReadCsvFunction:
    Description: 'ReadCsvFunction ARN'
    Value: !GetAtt ReadCsvFunction.Arn
  SaveDataFunction:
    Description: 'SaveDataFunction ARN'
    Value: !GetAtt SaveDataFunction.Arn
  SaveDataAPI:
    Description: 'SaveDataAPI ARN'
    Value: !GetAtt SaveDataAPI.Arn